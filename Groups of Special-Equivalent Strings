public class Solution {
    public int NumSpecialEquivGroups(string[] A) {
        //step 1 - define hashset
        HashSet<string> seen = new HashSet<string>();
        foreach(string w in A) {
            //step 2 - for each word in string A, define array of size 52
            int[] count = new int[52];
            string[] countstr = new string[52];
            for (int j=0; j<w.Length; j++) {
                //step 3 - for each letter in word, calculate count at even index letter and odd index letter
                count[w[j]-'a'+26*(j%2)]++;
                countstr[w[j]-'a'+26*(j%2)] = count[w[j]-'a'+26*(j%2)].ToString();
            }
            //step 4 - join count elements to get a string then add string to hashset
            Console.WriteLine(string.Join(",", countstr));
            seen.Add(string.Join(",", countstr));
        }
        return seen.Count;
    }
}
